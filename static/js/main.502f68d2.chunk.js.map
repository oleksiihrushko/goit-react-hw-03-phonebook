{"version":3,"sources":["components/contactItem/ContactItem.module.css","components/App.module.css","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/contactForm/ContactForm.js","components/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","changeHandler","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","styles","contactForm","type","onChange","Component","ContactItem","contact","id","onRemoveContact","listItem","listItemP","listItemButton","onClick","ContactList","contacts","contactList","map","key","Filter","onChangeFilter","App","filter","addContact","uuid","prevState","removeContact","changeFilter","getFilteredContacts","toLowerCase","includes","storedContacts","JSON","parse","localStorage","getItem","length","prevProps","setItem","stringify","sectionTitle","ReactDOM","render","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,SAAW,8BAA8B,UAAY,+BAA+B,eAAiB,sC,gBCAvHD,EAAOC,QAAU,CAAC,aAAe,4B,mBCAjCD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,YAAc,mC,oMCEXC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,cAAgB,SAAAC,GAAM,IAAD,EACKA,EAAEC,OAAlBJ,EADW,EACXA,KAAMK,EADK,EACLA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,MAEO,EAAKT,MAAtBC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OAEd,EAAKQ,MAAMC,SAASV,EAAMC,GAC1B,EAAKK,SAAS,CACZN,KAAM,GACNC,OAAQ,M,uDAIF,IAAD,EACkBU,KAAKZ,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,0BAAMW,UAAWC,IAAOC,YAAaJ,SAAUC,KAAKJ,cAClD,sCAEE,6BACA,2BACEP,KAAK,OACLe,KAAK,OACLV,MAAOL,EACPgB,SAAUL,KAAKT,iBAGnB,6BACA,wCAEE,6BACA,2BACEF,KAAK,SACLe,KAAK,OACLV,MAAOJ,EACPe,SAAUL,KAAKT,iBAGnB,6BACA,4BAAQa,KAAK,UAAb,oB,GAhDiCE,a,yDC6B1BC,EA5BK,SAAC,GAAwD,IAAD,IAArDC,QAAWC,EAA0C,EAA1CA,GAAIpB,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,OAAUoB,EAAsB,EAAtBA,gBACpD,OACE,wBAAIT,UAAWC,IAAOS,UACpB,uBAAGV,UAAWC,IAAOU,WAClBvB,EADH,KACWC,GAEX,4BACEW,UAAWC,IAAOW,eAClBC,QAAS,kBAAMJ,EAAgBD,IAC/BL,KAAK,UAHP,gDCoBSW,EAzBK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUN,EAAsB,EAAtBA,gBAC/B,OACE,wBAAIT,UAAWC,IAAOe,aACnBD,EAASE,KAAI,SAAAV,GAAO,OACnB,kBAAC,EAAD,CACEW,IAAKX,EAAQC,GACbD,QAASA,EACTE,gBAAiBA,SCYZU,EArBA,SAAC,GAA+B,IAA7B1B,EAA4B,EAA5BA,MAAO2B,EAAqB,EAArBA,eACvB,OACE,8BACE,uDAEE,6BACA,2BACEjB,KAAK,OACLV,MAAOA,EACPW,SAAU,SAAAb,GAAC,OAAI6B,EAAe7B,EAAEC,OAAOC,aCL5B4B,E,4MACnBlC,MAAQ,CACN4B,SAAU,GACVO,OAAQ,I,EAYVC,WAAa,SAACnC,EAAMC,GAClB,IAAMkB,EAAU,CACdC,GAAIgB,cACJpC,KAAMA,EACNC,OAAQA,GAGV,EAAKK,UAAS,SAAA+B,GACZ,MAAO,CACLV,SAAS,GAAD,mBAAMU,EAAUV,UAAhB,CAA0BR,S,EAKxCmB,cAAgB,SAAAlB,GACd,EAAKd,UAAS,SAAA+B,GACZ,MAAO,CACLV,SAAUU,EAAUV,SAASO,QAAO,SAAAf,GAAO,OAAIA,EAAQC,KAAOA,U,EAKpEmB,aAAe,SAAAL,GACb,EAAK5B,SAAS,CAAE4B,Y,EAGlBM,oBAAsB,WAAO,IAAD,EACG,EAAKzC,MAA1B4B,EADkB,EAClBA,SAAUO,EADQ,EACRA,OAElB,OAAOP,EAASO,QAAO,SAAAf,GAAO,OAC5BA,EAAQnB,KAAKyC,cAAcC,SAASR,EAAOO,mB,kEAvC7C,IAAME,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aACvDJ,EAAeK,OAAS,GAAKrC,KAAKL,SAAS,CAAEqB,SAAUgB,M,yCAGtCM,EAAWZ,GAC5BA,EAAUV,WAAahB,KAAKZ,MAAM4B,UAChCmB,aAAaI,QAAQ,WAAYN,KAAKO,UAAUxC,KAAKZ,MAAM4B,a,+BAqCrD,IAAD,EACsBhB,KAAKZ,MAA1B4B,EADD,EACCA,SAAUO,EADX,EACWA,OAClB,OACE,6BACE,wBAAItB,UAAWC,IAAOuC,cAAtB,aAEA,kBAAC,EAAD,CAAa1C,SAAUC,KAAKwB,aAE5B,wBAAIvB,UAAWC,IAAOuC,cAAtB,YACCzB,EAASqB,OAAS,GACjB,kBAAC,EAAD,CAAQ3C,MAAO6B,EAAQF,eAAgBrB,KAAK4B,eAE9C,kBAAC,EAAD,CACElB,gBAAiBV,KAAK2B,cACtBX,SAAUhB,KAAK6B,6B,GA/DQvB,aCFjCoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.502f68d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__3r5Ou\",\"listItemP\":\"ContactItem_listItemP__37-Q9\",\"listItemButton\":\"ContactItem_listItemButton__1PDbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__3X4Sa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2dqRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3F32i\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  changeHandler = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <br />\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={number}\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from './ContactItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ contact: { id, name, number }, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.listItemP}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={styles.listItemButton}\r\n        onClick={() => onRemoveContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Удалить\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport styles from './ContactList.module.css';\r\nimport ContactItem from '../contactItem/ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onRemoveContact={onRemoveContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        ></input>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport ContactForm from './contactForm/ContactForm';\nimport { v4 as uuid } from 'uuid';\nimport styles from './App.module.css';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  componentDidMount() {\n    const storedContacts = JSON.parse(localStorage.getItem('contacts'));\n    storedContacts.length > 0 && this.setState({ contacts: storedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    prevState.contacts !== this.state.contacts &&\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <div>\n        <h1 className={styles.sectionTitle}>Phonebook</h1>\n\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 className={styles.sectionTitle}>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        <ContactList\n          onRemoveContact={this.removeContact}\n          contacts={this.getFilteredContacts()}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}